{"pytest_version": "5.2.0", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Caps/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Common/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PageObjects/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PaggeLocators/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestDatas/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_prepare", "location": ["TestCases\\test_0_login.py", 11, "TestLogin.test_prepare"], "keywords": {"test_prepare": 1, "TestCases/__init__.py": 1, "test": 1, "AppFramework": 1, "()": 1, "TestLogin": 1, "pytestmark": 1, "test_0_login.py": 1, "usefixtures": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "selenium.common.exceptions.TimeoutException: Message:"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.fixture()", "    def init_reset():", "        driver = base_driver(automationName=None,noReset=True)", "        time.sleep(20)", ">       swipe_welcome(driver)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 73, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    WebDriverWait(driver,20).until(EC.visibility_of_element_located((MobileBy.ANDROID_UIAUTOMATOR,'new UiSelector().className(\"android.widget.Button\")')))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 49, "message": "in swipe_welcome"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def until(self, method, message=''):", "        \"\"\"Calls the method provided with the driver as an argument until the \\", "        return value is not False.\"\"\"", "        screen = None", "        stacktrace = None", "    ", "        end_time = time.time() + self._timeout", "        while True:", "            try:", "                value = method(self._driver)", "                if value:", "                    return value", "            except self._ignored_exceptions as exc:", "                screen = getattr(exc, 'screen', None)", "                stacktrace = getattr(exc, 'stacktrace', None)", "            time.sleep(self._poll)", "            if time.time() > end_time:", "                break", ">       raise TimeoutException(message, screen, stacktrace)", "E       selenium.common.exceptions.TimeoutException: Message:"], "reprfuncargs": {"args": [["self", "<selenium.webdriver.support.wait.WebDriverWait (session=\"45b79c74-fdcf-42ea-b1b1-7e5dcc4be14f\")>"], ["method", "<selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000238F5EAFB50>"], ["message", "''"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "TimeoutException"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.fixture()", "    def init_reset():", "        driver = base_driver(automationName=None,noReset=True)", "        time.sleep(20)", ">       swipe_welcome(driver)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 73, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    WebDriverWait(driver,20).until(EC.visibility_of_element_located((MobileBy.ANDROID_UIAUTOMATOR,'new UiSelector().className(\"android.widget.Button\")')))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 49, "message": "in swipe_welcome"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def until(self, method, message=''):", "        \"\"\"Calls the method provided with the driver as an argument until the \\", "        return value is not False.\"\"\"", "        screen = None", "        stacktrace = None", "    ", "        end_time = time.time() + self._timeout", "        while True:", "            try:", "                value = method(self._driver)", "                if value:", "                    return value", "            except self._ignored_exceptions as exc:", "                screen = getattr(exc, 'screen', None)", "                stacktrace = getattr(exc, 'stacktrace', None)", "            time.sleep(self._poll)", "            if time.time() > end_time:", "                break", ">       raise TimeoutException(message, screen, stacktrace)", "E       selenium.common.exceptions.TimeoutException: Message:"], "reprfuncargs": {"args": [["self", "<selenium.webdriver.support.wait.WebDriverWait (session=\"45b79c74-fdcf-42ea-b1b1-7e5dcc4be14f\")>"], ["method", "<selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000238F5EAFB50>"], ["message", "''"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "TimeoutException"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "selenium.common.exceptions.TimeoutException: Message:"}, null]]}, "when": "setup", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"]], "duration": 61.69084191322327, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_prepare", "location": ["TestCases\\test_0_login.py", 11, "TestLogin.test_prepare"], "keywords": {"test_prepare": 1, "TestCases/__init__.py": 1, "test": 1, "AppFramework": 1, "()": 1, "TestLogin": 1, "pytestmark": 1, "test_0_login.py": 1, "usefixtures": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"]], "duration": 0.0010046958923339844, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_success", "location": ["TestCases\\test_0_login.py", 22, "TestLogin.test_login_success"], "keywords": {"test_login_success": 1, "TestCases/__init__.py": 1, "test": 1, "AppFramework": 1, "()": 1, "TestLogin": 1, "pytestmark": 1, "test_0_login.py": 1, "usefixtures": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "selenium.common.exceptions.TimeoutException: Message:"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.fixture()", "    def init_keep():", "        driver = base_driver(automationName=None,noReset=False)", "        time.sleep(20)", ">       swipe_welcome(driver)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 82, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    WebDriverWait(driver,20).until(EC.visibility_of_element_located((MobileBy.ANDROID_UIAUTOMATOR,'new UiSelector().className(\"android.widget.Button\")')))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 49, "message": "in swipe_welcome"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def until(self, method, message=''):", "        \"\"\"Calls the method provided with the driver as an argument until the \\", "        return value is not False.\"\"\"", "        screen = None", "        stacktrace = None", "    ", "        end_time = time.time() + self._timeout", "        while True:", "            try:", "                value = method(self._driver)", "                if value:", "                    return value", "            except self._ignored_exceptions as exc:", "                screen = getattr(exc, 'screen', None)", "                stacktrace = getattr(exc, 'stacktrace', None)", "            time.sleep(self._poll)", "            if time.time() > end_time:", "                break", ">       raise TimeoutException(message, screen, stacktrace)", "E       selenium.common.exceptions.TimeoutException: Message:"], "reprfuncargs": {"args": [["self", "<selenium.webdriver.support.wait.WebDriverWait (session=\"3997344d-663d-4562-b28b-f17b4ffe4941\")>"], ["method", "<selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000238F676B8B0>"], ["message", "''"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "TimeoutException"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.fixture()", "    def init_keep():", "        driver = base_driver(automationName=None,noReset=False)", "        time.sleep(20)", ">       swipe_welcome(driver)"], "reprfuncargs": {"args": []}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 82, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    WebDriverWait(driver,20).until(EC.visibility_of_element_located((MobileBy.ANDROID_UIAUTOMATOR,'new UiSelector().className(\"android.widget.Button\")')))"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\conftest.py", "lineno": 49, "message": "in swipe_welcome"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def until(self, method, message=''):", "        \"\"\"Calls the method provided with the driver as an argument until the \\", "        return value is not False.\"\"\"", "        screen = None", "        stacktrace = None", "    ", "        end_time = time.time() + self._timeout", "        while True:", "            try:", "                value = method(self._driver)", "                if value:", "                    return value", "            except self._ignored_exceptions as exc:", "                screen = getattr(exc, 'screen', None)", "                stacktrace = getattr(exc, 'stacktrace', None)", "            time.sleep(self._poll)", "            if time.time() > end_time:", "                break", ">       raise TimeoutException(message, screen, stacktrace)", "E       selenium.common.exceptions.TimeoutException: Message:"], "reprfuncargs": {"args": [["self", "<selenium.webdriver.support.wait.WebDriverWait (session=\"3997344d-663d-4562-b28b-f17b4ffe4941\")>"], ["method", "<selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000238F676B8B0>"], ["message", "''"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "TimeoutException"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py", "lineno": 80, "message": "selenium.common.exceptions.TimeoutException: Message:"}, null]]}, "when": "setup", "user_properties": [], "sections": [], "duration": 62.24994087219238, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_success", "location": ["TestCases\\test_0_login.py", 22, "TestLogin.test_login_success"], "keywords": {"test_login_success": 1, "TestCases/__init__.py": 1, "test": 1, "AppFramework": 1, "()": 1, "TestLogin": 1, "pytestmark": 1, "test_0_login.py": 1, "usefixtures": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.0009758472442626953, "_report_type": "TestReport"}
{"exitstatus": 1, "$report_type": "SessionFinish"}
