{"pytest_version": "5.2.0", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Caps/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Common/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PageLocators/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PageObjects/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_prepare.py::TestPreprae", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_prepare.py::TestPreprae", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_prepare.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_1_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_1_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_1_login.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_2_invest.py::TestInvest", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_2_invest.py::TestInvest", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_2_invest.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestDatas/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_2_invest.py::TestInvest::test_invest_success[logindata0-testdatas0]", "location": ["TestCases\\test_2_invest.py", 69, "TestInvest.test_invest_success[logindata0-testdatas0]"], "keywords": {"test_invest_success[logindata0-testdatas0]": 1, "TestInvest": 1, "testinvest": 1, "logindata0-testdatas0": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test_2_invest.py": 1, "parametrize": 1, "AppFramework": 1, "()": 1, "pytestmark": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"]], "duration": 10.355058193206787, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_2_invest.py::TestInvest::test_invest_success[logindata0-testdatas0]", "location": ["TestCases\\test_2_invest.py", 69, "TestInvest.test_invest_success[logindata0-testdatas0]"], "keywords": {"test_invest_success[logindata0-testdatas0]": 1, "TestInvest": 1, "testinvest": 1, "logindata0-testdatas0": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test_2_invest.py": 1, "parametrize": 1, "AppFramework": 1, "()": 1, "pytestmark": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "D:\\python\\mystudy\\AppFramework\\TestCases\\test_2_invest.py", "lineno": 20, "message": "NameError: name 'LoginPage' is not defined"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.testinvest", "    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['invest_success'])", "    @pytest.mark.parametrize('logindata',GetTestDatas().get_testdatas()['login_success'])", "    # @pytest.mark.usefixtures('init_keep')", "    def test_invest_success(self,init_class_keep_toast,init_session,testdatas,logindata):", "        '''", "        \u524d\u63d0:\u5df2\u767b\u5f55\u72b6\u6001", "        1.\u8fdb\u5165\u5230\"\u9879\u76ee\"\u9875\u7b7e", "        2.\u70b9\u51fb\u53ef\u6295\u8d44\u7684\u9879\u76ee", "        3.\u8f93\u5165\u6295\u8d44\u91d1\u989d", "        4.\u70b9\u51fb\u6295\u6807\u6309\u94ae", "        5.\u786e\u8ba4\u6295\u8d44\u6210\u529f(\u6295\u8d44\u6210\u529f+\u8d44\u91d1\u53d8\u5316)", "        '''", "        #\u5224\u5b9a\u662f\u5426\u5df2\u767b\u5f55,\u82e5\u672a\u767b\u5f55,\u5219\u6267\u884c\u767b\u5f55\u64cd\u4f5c", "        name = '\u6295\u6807\u64cd\u4f5c'", "        if IndexPage(init_class_keep_toast,init_session,name).visiable_login_btn():", "            init_session.info('app\u5904\u4e8e\u672a\u767b\u5f55\u72b6\u6001,\u8fdb\u884c\u8d26\u53f7\u767b\u5f55!')", "            name1 = '\u524d\u63d0:\u767b\u5f55\u72b6\u6001'", ">           self.prepare_login(init_class_keep_toast,init_session,name1)"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_2_invest.TestInvest object at 0x00000208AB9754C0>"], ["init_class_keep_toast", "<appium.webdriver.webdriver.WebDriver (session=\"e85572cc-de57-455d-b7f4-0500e5183741\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'ammount': 100, 'msg': '\u6295\u8d44\u6210\u529f'}"], ["logindata", "{'pwd': 'python', 'tele': 18684720553}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_2_invest.py", "lineno": 88, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def prepare_login(self,driver,logging,name):", "        logging.info('\u524d\u63d0:\u767b\u5f55\u72b6\u6001')", "        BottomWidget(driver,logging,name).switch_bottom_widget('\u6211')", ">       LoginPage(driver,logging,name).input_tele(testdatas['tele'])", "E       NameError: name 'LoginPage' is not defined"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_2_invest.TestInvest object at 0x00000208AB9754C0>"], ["driver", "<appium.webdriver.webdriver.WebDriver (session=\"e85572cc-de57-455d-b7f4-0500e5183741\")>"], ["logging", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["name", "'\u524d\u63d0:\u767b\u5f55\u72b6\u6001'"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_2_invest.py", "lineno": 20, "message": "NameError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.testinvest", "    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['invest_success'])", "    @pytest.mark.parametrize('logindata',GetTestDatas().get_testdatas()['login_success'])", "    # @pytest.mark.usefixtures('init_keep')", "    def test_invest_success(self,init_class_keep_toast,init_session,testdatas,logindata):", "        '''", "        \u524d\u63d0:\u5df2\u767b\u5f55\u72b6\u6001", "        1.\u8fdb\u5165\u5230\"\u9879\u76ee\"\u9875\u7b7e", "        2.\u70b9\u51fb\u53ef\u6295\u8d44\u7684\u9879\u76ee", "        3.\u8f93\u5165\u6295\u8d44\u91d1\u989d", "        4.\u70b9\u51fb\u6295\u6807\u6309\u94ae", "        5.\u786e\u8ba4\u6295\u8d44\u6210\u529f(\u6295\u8d44\u6210\u529f+\u8d44\u91d1\u53d8\u5316)", "        '''", "        #\u5224\u5b9a\u662f\u5426\u5df2\u767b\u5f55,\u82e5\u672a\u767b\u5f55,\u5219\u6267\u884c\u767b\u5f55\u64cd\u4f5c", "        name = '\u6295\u6807\u64cd\u4f5c'", "        if IndexPage(init_class_keep_toast,init_session,name).visiable_login_btn():", "            init_session.info('app\u5904\u4e8e\u672a\u767b\u5f55\u72b6\u6001,\u8fdb\u884c\u8d26\u53f7\u767b\u5f55!')", "            name1 = '\u524d\u63d0:\u767b\u5f55\u72b6\u6001'", ">           self.prepare_login(init_class_keep_toast,init_session,name1)"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_2_invest.TestInvest object at 0x00000208AB9754C0>"], ["init_class_keep_toast", "<appium.webdriver.webdriver.WebDriver (session=\"e85572cc-de57-455d-b7f4-0500e5183741\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'ammount': 100, 'msg': '\u6295\u8d44\u6210\u529f'}"], ["logindata", "{'pwd': 'python', 'tele': 18684720553}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_2_invest.py", "lineno": 88, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def prepare_login(self,driver,logging,name):", "        logging.info('\u524d\u63d0:\u767b\u5f55\u72b6\u6001')", "        BottomWidget(driver,logging,name).switch_bottom_widget('\u6211')", ">       LoginPage(driver,logging,name).input_tele(testdatas['tele'])", "E       NameError: name 'LoginPage' is not defined"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_2_invest.TestInvest object at 0x00000208AB9754C0>"], ["driver", "<appium.webdriver.webdriver.WebDriver (session=\"e85572cc-de57-455d-b7f4-0500e5183741\")>"], ["logging", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["name", "'\u524d\u63d0:\u767b\u5f55\u72b6\u6001'"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_2_invest.py", "lineno": 20, "message": "NameError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\python\\mystudy\\AppFramework\\TestCases\\test_2_invest.py", "lineno": 20, "message": "NameError: name 'LoginPage' is not defined"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u9996\u9875\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.9320778846740723s\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.06232762336730957s\n\u001b[32mINFO    \u001b[0m root:basepage.py:56 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:102 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_2_invest.py:86 app\u5904\u4e8e\u672a\u767b\u5f55\u72b6\u6001,\u8fdb\u884c\u8d26\u53f7\u767b\u5f55!\n\u001b[32mINFO    \u001b[0m root:test_2_invest.py:18 \u524d\u63d0:\u767b\u5f55\u72b6\u6001\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.07121682167053223s\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.06051301956176758s\n\u001b[32mINFO    \u001b[0m root:basepage.py:56 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:102 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!"]], "duration": 7.2250518798828125, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_2_invest.py::TestInvest::test_invest_success[logindata0-testdatas0]", "location": ["TestCases\\test_2_invest.py", 69, "TestInvest.test_invest_success[logindata0-testdatas0]"], "keywords": {"test_invest_success[logindata0-testdatas0]": 1, "TestInvest": 1, "testinvest": 1, "logindata0-testdatas0": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test_2_invest.py": 1, "parametrize": 1, "AppFramework": 1, "()": 1, "pytestmark": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u9996\u9875\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.9320778846740723s\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.06232762336730957s\n\u001b[32mINFO    \u001b[0m root:basepage.py:56 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:102 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u9996\u9875\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_2_invest.py:86 app\u5904\u4e8e\u672a\u767b\u5f55\u72b6\u6001,\u8fdb\u884c\u8d26\u53f7\u767b\u5f55!\n\u001b[32mINFO    \u001b[0m root:test_2_invest.py:18 \u524d\u63d0:\u767b\u5f55\u72b6\u6001\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.07121682167053223s\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.06051301956176758s\n\u001b[32mINFO    \u001b[0m root:basepage.py:56 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:102 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!"]], "duration": 1.0876305103302002, "_report_type": "TestReport"}
{"exitstatus": 1, "$report_type": "SessionFinish"}
