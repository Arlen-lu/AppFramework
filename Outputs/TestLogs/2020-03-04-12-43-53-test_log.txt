{"pytest_version": "5.2.0", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Caps/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "Common/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PageObjects/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "PaggeLocators/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestDatas/__init__.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "_report_type": "CollectReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_prepare", "location": ["TestCases\\test_0_login.py", 13, "TestLogin.test_prepare"], "keywords": {"test": 1, "test_0_login.py": 1, "usefixtures": 1, "TestLogin": 1, "AppFramework": 1, "pytestmark": 1, "test_prepare": 1, "()": 1, "TestCases/__init__.py": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"]], "duration": 19.170103311538696, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_prepare", "location": ["TestCases\\test_0_login.py", 13, "TestLogin.test_prepare"], "keywords": {"test": 1, "test_0_login.py": 1, "usefixtures": 1, "TestLogin": 1, "AppFramework": 1, "pytestmark": 1, "test_prepare": 1, "()": 1, "TestCases/__init__.py": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_login')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5324950218200684s\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:19 app\u5df2\u767b\u5f55,\u6267\u884c\u6570\u636e\u6e05\u7a7a\u64cd\u4f5c!"]], "duration": 0.5334398746490479, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_prepare", "location": ["TestCases\\test_0_login.py", 13, "TestLogin.test_prepare"], "keywords": {"test": 1, "test_0_login.py": 1, "usefixtures": 1, "TestLogin": 1, "AppFramework": 1, "pytestmark": 1, "test_prepare": 1, "()": 1, "TestCases/__init__.py": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log setup", "\u001b[32mINFO    \u001b[0m root:conftest.py:65 xxxxxxx"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_login')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5324950218200684s\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:19 app\u5df2\u767b\u5f55,\u6267\u884c\u6570\u636e\u6e05\u7a7a\u64cd\u4f5c!"]], "duration": 0.981853723526001, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas0]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas0]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "test_login_tele_wrong[testdatas0]": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 48.83329892158508, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas0]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas0]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "test_login_tele_wrong[testdatas0]": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", ">       LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B558CDBE20>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"b02442f2-0f05-461a-8758-47fb8c64237c\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': None}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 30, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    self.input_ele_text(loc.input_tele_loc,tele)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 20, "message": "in input_tele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 61, "message": "in input_ele_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595676A0>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def input_ele_text(self,loc,value):", "        ele = self.get_ele(loc)", "        try:", ">           ele.send_keys(value)"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595676A0>"], ["loc", "('id', 'com.xxzb.fenwoo:id/et_phone')"], ["value", "None"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 58, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def send_keys(self, *value):", "        \"\"\"Simulates typing into the element.", "    ", "        :Args:", "            - value - A string for typing, or setting form fields.  For setting", "              file inputs, this could be a local file path.", "    ", "        Use this to send simple key events or to fill out form fields::", "    ", "            form_textfield = driver.find_element_by_name('username')", "            form_textfield.send_keys(\"admin\")", "    ", "        This can also be used to set file inputs.", "    ", "        ::", "    ", "            file_input = driver.find_element_by_name('profilePic')", "            file_input.send_keys(\"path/to/profilepic.gif\")", "            # Generally it's better to wrap the file path in one of the methods", "            # in os.path to return the actual path to support cross OS testing.", "            # file_input.send_keys(os.path.abspath(\"path/to/profilepic.gif\"))", "    ", "        \"\"\"", "        # transfer file to another machine only if remote driver is used", "        # the same behaviour as for java binding", "        if self.parent._is_remote:", ">           local_file = self.parent.file_detector.is_local_file(*value)"], "reprfuncargs": {"args": [["self", "<appium.webdriver.webelement.WebElement (session=\"b02442f2-0f05-461a-8758-47fb8c64237c\", element=\"25a26fc3-bc66-488c-9074-61368dcd32d6\")>"], ["value", "(None,)"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py", "lineno": 473, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def is_local_file(self, *keys):", ">       file_path = ''.join(keys_to_typing(keys))"], "reprfuncargs": {"args": [["self", "<selenium.webdriver.remote.file_detector.LocalFileDetector object at 0x000001B559567610>"], ["keys", "(None,)"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\file_detector.py", "lineno": 48, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def keys_to_typing(value):", "        \"\"\"Processes the values that will be typed in the element.\"\"\"", "        typing = []", "        for val in value:", "            if isinstance(val, Keys):", "                typing.append(val)", "            elif isinstance(val, int):", "                val = str(val)", "                for i in range(len(val)):", "                    typing.append(val[i])", "            else:", ">               for i in range(len(val)):", "E               TypeError: object of type 'NoneType' has no len()"], "reprfuncargs": {"args": [["value", "(None,)"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py", "lineno": 150, "message": "TypeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py", "lineno": 150, "message": "TypeError: object of type 'NoneType' has no len()"}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", ">       LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B558CDBE20>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"b02442f2-0f05-461a-8758-47fb8c64237c\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': None}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 30, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    self.input_ele_text(loc.input_tele_loc,tele)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 20, "message": "in input_tele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 61, "message": "in input_ele_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595676A0>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5509469509124756s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.0340871810913086s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01"]], "duration": 2.3189194202423096, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas0]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas0]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "test_login_tele_wrong[testdatas0]": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5509469509124756s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.0340871810913086s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01"]], "duration": 1.3065276145935059, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas1]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas1]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "testdatas1": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "test_login_tele_wrong[testdatas1]": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 47.05542707443237, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas1]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas1]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "testdatas1": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "test_login_tele_wrong[testdatas1]": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", "        LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])", "        try:", "            assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']", "            init_session.info('Test Pass!')", "        except Exception as e:", "            init_session.info('Test Fail')", ">           raise e"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B559567940>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"3a6cbcf7-ec2b-41d5-860b-e637ee3b1e21\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': 15264}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 32, "message": "in test_login_tele_wrong"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self.get_ele_attr(loc.popbox_prompt_loc,'text')"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 27, "message": "in get_popbox_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    ele = self.get_ele(loc)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 88, "message": "in get_ele_attr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 50, "message": "in get_ele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595BE790>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def get_ele(self,loc):", "        try:", ">           ele = self.driver.find_element(*loc)"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595BE790>"], ["loc", "('id', 'com.xxzb.fenwoo:id/tv_message')"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_element(self, by=By.ID, value=None):", "        \"\"\"'Private' method used by the find_element_by_* methods.", "    ", "        Override for Appium", "    ", "        Usage:", "            Use the corresponding find_element_by_* instead of this.", "    ", "        Returns:", "            `appium.webdriver.webelement.WebElement`", "    ", "        :rtype: `MobileWebElement`", "        \"\"\"", "        # TODO: If we need, we should enable below converter for Web context", "        # if self.w3c:", "        #     if by == By.ID:", "        #         by = By.CSS_SELECTOR", "        #         value = '[id=\"%s\"]' % value", "        #     elif by == By.TAG_NAME:", "        #         by = By.CSS_SELECTOR", "        #     elif by == By.CLASS_NAME:", "        #         by = By.CSS_SELECTOR", "        #         value = \".%s\" % value", "        #     elif by == By.NAME:", "        #         by = By.CSS_SELECTOR", "        #         value = '[name=\"%s\"]' % value", "    ", ">       return self.execute(RemoteCommand.FIND_ELEMENT, {", "            'using': by,", "            'value': value})['value']"], "reprfuncargs": {"args": [["self", "<appium.webdriver.webdriver.WebDriver (session=\"3a6cbcf7-ec2b-41d5-860b-e637ee3b1e21\")>"], ["by", "'id'"], ["value", "'com.xxzb.fenwoo:id/tv_message'"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\webdriver.py", "lineno": 282, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def execute(self, driver_command, params=None):", "        \"\"\"", "        Sends a command to be executed by a command.CommandExecutor.", "    ", "        :Args:", "         - driver_command: The name of the command to execute as a string.", "         - params: A dictionary of named parameters to send with the command.", "    ", "        :Returns:", "          The command's JSON response loaded into a dictionary object.", "        \"\"\"", "        if self.session_id is not None:", "            if not params:", "                params = {'sessionId': self.session_id}", "            elif 'sessionId' not in params:", "                params['sessionId'] = self.session_id", "    ", "        params = self._wrap_value(params)", "        response = self.command_executor.execute(driver_command, params)", "        if response:", ">           self.error_handler.check_response(response)"], "reprfuncargs": {"args": [["self", "<appium.webdriver.webdriver.WebDriver (session=\"3a6cbcf7-ec2b-41d5-860b-e637ee3b1e21\")>"], ["driver_command", "'findElement'"], ["params", "{'using': 'id', 'value': 'com.xxzb.fenwoo:id/tv_message'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py", "lineno": 321, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        try:", "            super(MobileErrorHandler, self).check_response(response)", "        except WebDriverException as wde:", "            if wde.msg == 'No such context found.':", "                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace)", "            else:", ">               raise wde"], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595BE4C0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        try:", ">           super(MobileErrorHandler, self).check_response(response)"], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595BE4C0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        \"\"\"", "        Checks that a JSON response from the WebDriver does not have an error.", "    ", "        :Args:", "         - response - The JSON response from the WebDriver server as a dictionary", "           object.", "    ", "        :Raises: If the response contains an error message.", "        \"\"\"", "        status = response.get('status', None)", "        if status is None or status == ErrorCode.SUCCESS:", "            return", "        value = None", "        message = response.get(\"message\", \"\")", "        screen = response.get(\"screen\", \"\")", "        stacktrace = None", "        if isinstance(status, int):", "            value_json = response.get('value', None)", "            if value_json and isinstance(value_json, basestring):", "                import json", "                try:", "                    value = json.loads(value_json)", "                    if len(value.keys()) == 1:", "                        value = value['value']", "                    status = value.get('error', None)", "                    if status is None:", "                        status = value[\"status\"]", "                        message = value[\"value\"]", "                        if not isinstance(message, basestring):", "                            value = message", "                            message = message.get('message')", "                    else:", "                        message = value.get('message', None)", "                except ValueError:", "                    pass", "    ", "        exception_class = ErrorInResponseException", "        if status in ErrorCode.NO_SUCH_ELEMENT:", "            exception_class = NoSuchElementException", "        elif status in ErrorCode.NO_SUCH_FRAME:", "            exception_class = NoSuchFrameException", "        elif status in ErrorCode.NO_SUCH_WINDOW:", "            exception_class = NoSuchWindowException", "        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:", "            exception_class = StaleElementReferenceException", "        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:", "            exception_class = ElementNotVisibleException", "        elif status in ErrorCode.INVALID_ELEMENT_STATE:", "            exception_class = InvalidElementStateException", "        elif status in ErrorCode.INVALID_SELECTOR \\", "                or status in ErrorCode.INVALID_XPATH_SELECTOR \\", "                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:", "            exception_class = InvalidSelectorException", "        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:", "            exception_class = ElementNotSelectableException", "        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:", "            exception_class = ElementNotInteractableException", "        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:", "            exception_class = InvalidCookieDomainException", "        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:", "            exception_class = UnableToSetCookieException", "        elif status in ErrorCode.TIMEOUT:", "            exception_class = TimeoutException", "        elif status in ErrorCode.SCRIPT_TIMEOUT:", "            exception_class = TimeoutException", "        elif status in ErrorCode.UNKNOWN_ERROR:", "            exception_class = WebDriverException", "        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:", "            exception_class = UnexpectedAlertPresentException", "        elif status in ErrorCode.NO_ALERT_OPEN:", "            exception_class = NoAlertPresentException", "        elif status in ErrorCode.IME_NOT_AVAILABLE:", "            exception_class = ImeNotAvailableException", "        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:", "            exception_class = ImeActivationFailedException", "        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:", "            exception_class = MoveTargetOutOfBoundsException", "        elif status in ErrorCode.JAVASCRIPT_ERROR:", "            exception_class = JavascriptException", "        elif status in ErrorCode.SESSION_NOT_CREATED:", "            exception_class = SessionNotCreatedException", "        elif status in ErrorCode.INVALID_ARGUMENT:", "            exception_class = InvalidArgumentException", "        elif status in ErrorCode.NO_SUCH_COOKIE:", "            exception_class = NoSuchCookieException", "        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:", "            exception_class = ScreenshotException", "        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:", "            exception_class = ElementClickInterceptedException", "        elif status in ErrorCode.INSECURE_CERTIFICATE:", "            exception_class = InsecureCertificateException", "        elif status in ErrorCode.INVALID_COORDINATES:", "            exception_class = InvalidCoordinatesException", "        elif status in ErrorCode.INVALID_SESSION_ID:", "            exception_class = InvalidSessionIdException", "        elif status in ErrorCode.UNKNOWN_METHOD:", "            exception_class = UnknownMethodException", "        else:", "            exception_class = WebDriverException", "        if value == '' or value is None:", "            value = response['value']", "        if isinstance(value, basestring):", "            if exception_class == ErrorInResponseException:", "                raise exception_class(response, value)", "            raise exception_class(value)", "        if message == \"\" and 'message' in value:", "            message = value['message']", "    ", "        screen = None", "        if 'screen' in value:", "            screen = value['screen']", "    ", "        stacktrace = None", "        if 'stackTrace' in value and value['stackTrace']:", "            stacktrace = []", "            try:", "                for frame in value['stackTrace']:", "                    line = self._value_or_default(frame, 'lineNumber', '')", "                    file = self._value_or_default(frame, 'fileName', '<anonymous>')", "                    if line:", "                        file = \"%s:%s\" % (file, line)", "                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')", "                    if 'className' in frame:", "                        meth = \"%s.%s\" % (frame['className'], meth)", "                    msg = \"    at %s (%s)\"", "                    msg = msg % (meth, file)", "                    stacktrace.append(msg)", "            except TypeError:", "                pass", "        if exception_class == ErrorInResponseException:", "            raise exception_class(response, message)", "        elif exception_class == UnexpectedAlertPresentException:", "            alert_text = None", "            if 'data' in value:", "                alert_text = value['data'].get('text')", "            elif 'alert' in value:", "                alert_text = value['alert'].get('text')", "            raise exception_class(message, screen, stacktrace, alert_text)", ">       raise exception_class(message, screen, stacktrace)", "E       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters."], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595BE4C0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py", "lineno": 242, "message": "NoSuchElementException"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py", "lineno": 242, "message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters."}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", "        LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])", "        try:", "            assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']", "            init_session.info('Test Pass!')", "        except Exception as e:", "            init_session.info('Test Fail')", ">           raise e"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B559567940>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"3a6cbcf7-ec2b-41d5-860b-e637ee3b1e21\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': 15264}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 32, "message": "in test_login_tele_wrong"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self.get_ele_attr(loc.popbox_prompt_loc,'text')"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 27, "message": "in get_popbox_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    ele = self.get_ele(loc)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 88, "message": "in get_ele_attr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 50, "message": "in get_ele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595BE790>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5791769027709961s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.1244947910308838s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516515264\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:35 Test Fail"]], "duration": 4.729605674743652, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas1]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas1]"], "keywords": {"usefixtures": 1, "AppFramework": 1, "testdatas1": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "test_login_tele_wrong[testdatas1]": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5791769027709961s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.1244947910308838s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516515264\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:35 Test Fail"]], "duration": 1.980931282043457, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas2]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas2]"], "keywords": {"test_login_tele_wrong[testdatas2]": 1, "AppFramework": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "testdatas2": 1, "TestLogin": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [["Captured log setup", "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:744 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))': /wd/hub/session/e590530e-d46c-4134-a351-59b3f68942f1/appium/device/current_activity"]], "duration": 47.883644104003906, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas2]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas2]"], "keywords": {"test_login_tele_wrong[testdatas2]": 1, "AppFramework": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "testdatas2": 1, "TestLogin": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", "        LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])", "        try:", "            assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']", "            init_session.info('Test Pass!')", "        except Exception as e:", "            init_session.info('Test Fail')", ">           raise e"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B5595BEEE0>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"e590530e-d46c-4134-a351-59b3f68942f1\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': 99999999999}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 32, "message": "in test_login_tele_wrong"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self.get_ele_attr(loc.popbox_prompt_loc,'text')"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 27, "message": "in get_popbox_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    ele = self.get_ele(loc)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 88, "message": "in get_ele_attr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 50, "message": "in get_ele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595F95E0>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    def get_ele(self,loc):", "        try:", ">           ele = self.driver.find_element(*loc)"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595F95E0>"], ["loc", "('id', 'com.xxzb.fenwoo:id/tv_message')"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 46, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def find_element(self, by=By.ID, value=None):", "        \"\"\"'Private' method used by the find_element_by_* methods.", "    ", "        Override for Appium", "    ", "        Usage:", "            Use the corresponding find_element_by_* instead of this.", "    ", "        Returns:", "            `appium.webdriver.webelement.WebElement`", "    ", "        :rtype: `MobileWebElement`", "        \"\"\"", "        # TODO: If we need, we should enable below converter for Web context", "        # if self.w3c:", "        #     if by == By.ID:", "        #         by = By.CSS_SELECTOR", "        #         value = '[id=\"%s\"]' % value", "        #     elif by == By.TAG_NAME:", "        #         by = By.CSS_SELECTOR", "        #     elif by == By.CLASS_NAME:", "        #         by = By.CSS_SELECTOR", "        #         value = \".%s\" % value", "        #     elif by == By.NAME:", "        #         by = By.CSS_SELECTOR", "        #         value = '[name=\"%s\"]' % value", "    ", ">       return self.execute(RemoteCommand.FIND_ELEMENT, {", "            'using': by,", "            'value': value})['value']"], "reprfuncargs": {"args": [["self", "<appium.webdriver.webdriver.WebDriver (session=\"e590530e-d46c-4134-a351-59b3f68942f1\")>"], ["by", "'id'"], ["value", "'com.xxzb.fenwoo:id/tv_message'"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\webdriver.py", "lineno": 282, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def execute(self, driver_command, params=None):", "        \"\"\"", "        Sends a command to be executed by a command.CommandExecutor.", "    ", "        :Args:", "         - driver_command: The name of the command to execute as a string.", "         - params: A dictionary of named parameters to send with the command.", "    ", "        :Returns:", "          The command's JSON response loaded into a dictionary object.", "        \"\"\"", "        if self.session_id is not None:", "            if not params:", "                params = {'sessionId': self.session_id}", "            elif 'sessionId' not in params:", "                params['sessionId'] = self.session_id", "    ", "        params = self._wrap_value(params)", "        response = self.command_executor.execute(driver_command, params)", "        if response:", ">           self.error_handler.check_response(response)"], "reprfuncargs": {"args": [["self", "<appium.webdriver.webdriver.WebDriver (session=\"e590530e-d46c-4134-a351-59b3f68942f1\")>"], ["driver_command", "'findElement'"], ["params", "{'using': 'id', 'value': 'com.xxzb.fenwoo:id/tv_message'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py", "lineno": 321, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        try:", "            super(MobileErrorHandler, self).check_response(response)", "        except WebDriverException as wde:", "            if wde.msg == 'No such context found.':", "                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace)", "            else:", ">               raise wde"], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595F94F0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py", "lineno": 29, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        try:", ">           super(MobileErrorHandler, self).check_response(response)"], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595F94F0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\appium\\webdriver\\errorhandler.py", "lineno": 24, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    def check_response(self, response):", "        \"\"\"", "        Checks that a JSON response from the WebDriver does not have an error.", "    ", "        :Args:", "         - response - The JSON response from the WebDriver server as a dictionary", "           object.", "    ", "        :Raises: If the response contains an error message.", "        \"\"\"", "        status = response.get('status', None)", "        if status is None or status == ErrorCode.SUCCESS:", "            return", "        value = None", "        message = response.get(\"message\", \"\")", "        screen = response.get(\"screen\", \"\")", "        stacktrace = None", "        if isinstance(status, int):", "            value_json = response.get('value', None)", "            if value_json and isinstance(value_json, basestring):", "                import json", "                try:", "                    value = json.loads(value_json)", "                    if len(value.keys()) == 1:", "                        value = value['value']", "                    status = value.get('error', None)", "                    if status is None:", "                        status = value[\"status\"]", "                        message = value[\"value\"]", "                        if not isinstance(message, basestring):", "                            value = message", "                            message = message.get('message')", "                    else:", "                        message = value.get('message', None)", "                except ValueError:", "                    pass", "    ", "        exception_class = ErrorInResponseException", "        if status in ErrorCode.NO_SUCH_ELEMENT:", "            exception_class = NoSuchElementException", "        elif status in ErrorCode.NO_SUCH_FRAME:", "            exception_class = NoSuchFrameException", "        elif status in ErrorCode.NO_SUCH_WINDOW:", "            exception_class = NoSuchWindowException", "        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:", "            exception_class = StaleElementReferenceException", "        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:", "            exception_class = ElementNotVisibleException", "        elif status in ErrorCode.INVALID_ELEMENT_STATE:", "            exception_class = InvalidElementStateException", "        elif status in ErrorCode.INVALID_SELECTOR \\", "                or status in ErrorCode.INVALID_XPATH_SELECTOR \\", "                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:", "            exception_class = InvalidSelectorException", "        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:", "            exception_class = ElementNotSelectableException", "        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:", "            exception_class = ElementNotInteractableException", "        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:", "            exception_class = InvalidCookieDomainException", "        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:", "            exception_class = UnableToSetCookieException", "        elif status in ErrorCode.TIMEOUT:", "            exception_class = TimeoutException", "        elif status in ErrorCode.SCRIPT_TIMEOUT:", "            exception_class = TimeoutException", "        elif status in ErrorCode.UNKNOWN_ERROR:", "            exception_class = WebDriverException", "        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:", "            exception_class = UnexpectedAlertPresentException", "        elif status in ErrorCode.NO_ALERT_OPEN:", "            exception_class = NoAlertPresentException", "        elif status in ErrorCode.IME_NOT_AVAILABLE:", "            exception_class = ImeNotAvailableException", "        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:", "            exception_class = ImeActivationFailedException", "        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:", "            exception_class = MoveTargetOutOfBoundsException", "        elif status in ErrorCode.JAVASCRIPT_ERROR:", "            exception_class = JavascriptException", "        elif status in ErrorCode.SESSION_NOT_CREATED:", "            exception_class = SessionNotCreatedException", "        elif status in ErrorCode.INVALID_ARGUMENT:", "            exception_class = InvalidArgumentException", "        elif status in ErrorCode.NO_SUCH_COOKIE:", "            exception_class = NoSuchCookieException", "        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:", "            exception_class = ScreenshotException", "        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:", "            exception_class = ElementClickInterceptedException", "        elif status in ErrorCode.INSECURE_CERTIFICATE:", "            exception_class = InsecureCertificateException", "        elif status in ErrorCode.INVALID_COORDINATES:", "            exception_class = InvalidCoordinatesException", "        elif status in ErrorCode.INVALID_SESSION_ID:", "            exception_class = InvalidSessionIdException", "        elif status in ErrorCode.UNKNOWN_METHOD:", "            exception_class = UnknownMethodException", "        else:", "            exception_class = WebDriverException", "        if value == '' or value is None:", "            value = response['value']", "        if isinstance(value, basestring):", "            if exception_class == ErrorInResponseException:", "                raise exception_class(response, value)", "            raise exception_class(value)", "        if message == \"\" and 'message' in value:", "            message = value['message']", "    ", "        screen = None", "        if 'screen' in value:", "            screen = value['screen']", "    ", "        stacktrace = None", "        if 'stackTrace' in value and value['stackTrace']:", "            stacktrace = []", "            try:", "                for frame in value['stackTrace']:", "                    line = self._value_or_default(frame, 'lineNumber', '')", "                    file = self._value_or_default(frame, 'fileName', '<anonymous>')", "                    if line:", "                        file = \"%s:%s\" % (file, line)", "                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')", "                    if 'className' in frame:", "                        meth = \"%s.%s\" % (frame['className'], meth)", "                    msg = \"    at %s (%s)\"", "                    msg = msg % (meth, file)", "                    stacktrace.append(msg)", "            except TypeError:", "                pass", "        if exception_class == ErrorInResponseException:", "            raise exception_class(response, message)", "        elif exception_class == UnexpectedAlertPresentException:", "            alert_text = None", "            if 'data' in value:", "                alert_text = value['data'].get('text')", "            elif 'alert' in value:", "                alert_text = value['alert'].get('text')", "            raise exception_class(message, screen, stacktrace, alert_text)", ">       raise exception_class(message, screen, stacktrace)", "E       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters."], "reprfuncargs": {"args": [["self", "<appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001B5595F94F0>"], ["response", "{'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...ces\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-android-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\find.js:75:11)\"}}'}"]]}, "reprlocals": null, "reprfileloc": {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py", "lineno": 242, "message": "NoSuchElementException"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "D:\\Program Files (x86)\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py", "lineno": 242, "message": "selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters."}, "During handling of the above exception, another exception occurred:"], [{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["    @pytest.mark.parametrize('testdatas',GetTestDatas().get_testdatas()['login_tele_wrong'])", "    @pytest.mark.usefixtures('init_keep')", "    def test_login_tele_wrong(self,init_keep,init_session,testdatas):", "        init_session.info('\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b')", "        name = '\u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef'", "        BottomWidget(init_keep,init_session,name).switch_bottom_widget('\u6211')", "        LoginPage(init_keep,init_session,name).input_tele(testdatas['tele'])", "        try:", "            assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']", "            init_session.info('Test Pass!')", "        except Exception as e:", "            init_session.info('Test Fail')", ">           raise e"], "reprfuncargs": {"args": [["self", "<AppFramework.TestCases.test_0_login.TestLogin object at 0x000001B5595BEEE0>"], ["init_keep", "<appium.webdriver.webdriver.WebDriver (session=\"e590530e-d46c-4134-a351-59b3f68942f1\")>"], ["init_session", "<module 'logging' from 'D:\\\\Program Files (x86)\\\\python\\\\lib\\\\logging\\\\__init__.py'>"], ["testdatas", "{'msg': '\u65e0\u6548\u7684\u624b\u673a\u53f7', 'tele': 99999999999}"]]}, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 36, "message": ""}, "style": "long"}}, {"type": "ReprEntry", "data": {"lines": ["    assert LoginPage(init_keep,init_session,name).get_popbox_text() == testdatas['msg']"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "TestCases\\test_0_login.py", "lineno": 32, "message": "in test_login_tele_wrong"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    return self.get_ele_attr(loc.popbox_prompt_loc,'text')"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "PageObjects\\loginpage.py", "lineno": 27, "message": "in get_popbox_text"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    ele = self.get_ele(loc)"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 88, "message": "in get_ele_attr"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    self.imgs_screenshot()"], "reprfuncargs": null, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 50, "message": "in get_ele"}, "style": "short"}}, {"type": "ReprEntry", "data": {"lines": ["    def imgs_screenshot(self):", "        #\u914d\u7f6e\u622a\u56fe\u5f97\u8def\u5f84\u548c\u6587\u4ef6\u540d\u79f0", ">       pic_name = '{0}-{1}.png'.format(self.model,time.strftime(\"%Y-%m-%d-%H-%M-%S\",time.localtime()))", "E       AttributeError: 'LoginPage' object has no attribute 'model'"], "reprfuncargs": {"args": [["self", "<PageObjects.loginpage.LoginPage object at 0x000001B5595F95E0>"]]}, "reprlocals": null, "reprfileloc": {"path": "Common\\basepage.py", "lineno": 101, "message": "AttributeError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "d:\\python\\mystudy\\AppFramework\\Common\\basepage.py", "lineno": 101, "message": "AttributeError: 'LoginPage' object has no attribute 'model'"}, null]]}, "when": "call", "user_properties": [], "sections": [["Captured log setup", "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:744 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))': /wd/hub/session/e590530e-d46c-4134-a351-59b3f68942f1/appium/device/current_activity"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.556915283203125s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.14764404296875s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516599999999999\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:35 Test Fail"]], "duration": 4.795116901397705, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_tele_wrong[testdatas2]", "location": ["TestCases\\test_0_login.py", 23, "TestLogin.test_login_tele_wrong[testdatas2]"], "keywords": {"test_login_tele_wrong[testdatas2]": 1, "AppFramework": 1, "usefixtures": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "testdatas2": 1, "TestLogin": 1, "pytestmark": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log setup", "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:744 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))': /wd/hub/session/e590530e-d46c-4134-a351-59b3f68942f1/appium/device/current_activity"], ["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:27 \u624b\u673a\u53f7\u8f93\u5165\u9519\u8bef\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.556915283203125s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f61.14764404296875s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516599999999999\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:test_0_login.py:35 Test Fail"]], "duration": 1.2755239009857178, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_success[testdatas0]", "location": ["TestCases\\test_0_login.py", 37, "TestLogin.test_login_success[testdatas0]"], "keywords": {"test_login_success[testdatas0]": 1, "usefixtures": 1, "AppFramework": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 46.563725233078, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_success[testdatas0]", "location": ["TestCases\\test_0_login.py", 37, "TestLogin.test_login_success[testdatas0]"], "keywords": {"test_login_success[testdatas0]": 1, "usefixtures": 1, "AppFramework": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:41 \u6210\u529f\u767b\u5f55\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5797641277313232s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.95664381980896s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516518684720553\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f62.0134987831115723s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u6210\u529f\u8f93\u5165python\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!"]], "duration": 7.563564300537109, "_report_type": "TestReport"}
{"nodeid": "TestCases/test_0_login.py::TestLogin::test_login_success[testdatas0]", "location": ["TestCases\\test_0_login.py", 37, "TestLogin.test_login_success[testdatas0]"], "keywords": {"test_login_success[testdatas0]": 1, "usefixtures": 1, "AppFramework": 1, "TestCases/__init__.py": 1, "test": 1, "test_0_login.py": 1, "TestLogin": 1, "pytestmark": 1, "testdatas0": 1, "parametrize": 1, "()": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [["Captured log call", "\u001b[32mINFO    \u001b[0m root:test_0_login.py:41 \u6210\u529f\u767b\u5f55\u7528\u4f8b\n\u001b[32mINFO    \u001b[0m root:bottom_widget.py:15 \u5207\u6362\u5230\u9875\u9762\u6211\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.5797641277313232s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('-android uiautomator', 'new UiSelector().text(\"\u6211\")')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f60.95664381980896s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_phone')\u6210\u529f\u8f93\u516518684720553\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!\n\u001b[32mINFO    \u001b[0m root:basepage.py:38 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u67e5\u627e\u6210\u529f\uff0c\u8017\u65f62.0134987831115723s\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:59 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/et_pwd')\u6210\u529f\u8f93\u5165python\n\u001b[32mINFO    \u001b[0m root:basepage.py:47 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u67e5\u627e\u6210\u529f\uff01\n\u001b[32mINFO    \u001b[0m root:basepage.py:80 \u5143\u7d20('id', 'com.xxzb.fenwoo:id/btn_next_step')\u6210\u529f\u70b9\u51fb!"]], "duration": 1.419496774673462, "_report_type": "TestReport"}
{"exitstatus": 1, "$report_type": "SessionFinish"}
